<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.trjst.mapper.CollectMapper" >
  <resultMap id="BaseResultMap" type="com.trjst.model.Collect" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="assort_id" property="assort_id" jdbcType="INTEGER" />
    <result column="commodity_id" property="commodity_id" jdbcType="INTEGER" />
    <result column="user_id" property="user_id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
    <result column="commodity_name" property="commodity_name" jdbcType="VARCHAR" />
    <result column="main_pic" property="main_pic" jdbcType="VARCHAR" />
    <result column="des" property="des" jdbcType="VARCHAR" />
    <result column="original_price" property="original_price" jdbcType="DECIMAL" />
    <result column="activity_price" property="activity_price" jdbcType="DECIMAL" />
    <result column="assort_name" property="assort_name" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id,assort_id, commodity_id, user_id, type, create_time
  </sql>

  <select id="collectAssortList" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    SELECT
    c.id,
    c.assort_id,
    c.user_id,
    c.create_time,
    a.NAME AS assort_name
    FROM
    collect c
    LEFT JOIN assort a ON c.assort_id = a.id
    WHERE
    c.user_id = #{userId,jdbcType=INTEGER}
    GROUP BY
    c.assort_id
    ORDER BY
    c.create_time DESC
  </select>

  <!--<select id="collectList" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
      c.id, c.assort_id,c.commodity_id, c.user_id, c.type, c.create_time,ci.commodity_name,ci.main_pic,ci.des,
    ci.original_price,ci.activity_price
    from collect c left join commodity_info ci on c.commodity_id = ci.id
    where c.user_id = #{userId,jdbcType=INTEGER} and c.assort_id = #{assort_id,jdbcType=INTEGER} order by create_time desc
  </select>-->

  <select id="collectList" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    c.id, c.assort_id,c.commodity_id, c.user_id, c.type, c.create_time,ci.commodity_name,ci.main_pic,ci.des,
    ci.original_price,ci.activity_price
    from collect c left join commodity_info ci on c.commodity_id = ci.id
    where c.user_id = #{userId,jdbcType=INTEGER} order by create_time desc
  </select>

  <select id="collectListByUserId" resultMap="BaseResultMap" parameterType="com.trjst.model.Collect" >
    select
    <include refid="Base_Column_List" />
    from collect
    <where>
      <if test="user_id != null and user_id != ''">
        and user_id = #{user_id}
      </if>
      <if test="commodity_id != null and commodity_id != ''">
        and commodity_id = #{commodity_id}
      </if>
    </where>
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from collect
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from collect
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="com.trjst.model.Collect" >
    insert into collect
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="assort_id != null" >
        assort_id,
      </if>
      <if test="commodity_id != null" >
        commodity_id,
      </if>
      <if test="user_id != null" >
        user_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="assort_id != null" >
        #{assort_id,jdbcType=INTEGER},
      </if>
      <if test="commodity_id != null" >
        #{commodity_id,jdbcType=INTEGER},
      </if>
      <if test="user_id != null" >
        #{user_id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="create_time != null" >
        #{create_time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.trjst.model.Collect" >
    update collect
    <set >
      <if test="assort_id != null" >
        assort_id = #{assort_id,jdbcType=INTEGER},
      </if>
      <if test="commodity_id != null" >
        commodity_id = #{commodity_id,jdbcType=INTEGER},
      </if>
      <if test="user_id != null" >
        user_id = #{user_id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="create_time != null" >
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>